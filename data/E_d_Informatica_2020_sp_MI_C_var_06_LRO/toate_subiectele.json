{
    "subiectul_1": {
        "subject_number": "I",
        "total_points": "20",
        "subject_title": "SUBIECTUL I",
        "exercises": {
            "1": {
                "content": "Indicați valoarea expresiei C/C++ alăturate. 3+5.0/2+2\na. 2 b. 5 c. 6 d. 7.5",
                "exercise_number": "1"
            },
            "2": {
                "content": "Variabila v memorează un tablou unidimensional cu\n4 elemente, numerotate începând de la 0.\nSubprogramul f este definit alăturat.\nvoid f(int i, int v[4])\n{ if(i>=3) v[i]=v[i]+1;\n else f(i+1,v);\n cout<<v[i]; | printf(\"%d\",v[i]);\n}\nIndicați setul de elemente pe care le poate avea tabloul memorat în v, în ordinea în care apar în acesta,\nastfel încât, în urma apelului de mai jos, să se afișeze pe ecran 2020.\nf(0,v);\na. -1,1,0,2 b. 0,2,0,1 c. 1,-1,0,1 d. 2,0,1,0",
                "exercise_number": "2"
            },
            "3": {
                "content": "Utilizând metoda backtracking se generează toate variantele prin care patru persoane pot plăti o\nconsumație totală de 200 de lei în următoarele condiții:\n• fiecare plătește o sumă nenulă, divizibilă cu 10;\n• primul plătește mai mult decât al doilea, al doilea mai mult decât al treilea, iar acesta mai mult decât al\npatrulea.\nO soluție constă în patru valori, reprezentând, în ordine, sumele plătite de fiecare dintre cele patru persoane.\nPrimele patru soluții generate sunt, în această ordine: (70, 60, 40, 30), (70, 60, 50, 20), (80, 50, 40, 30),\n(80, 60, 40, 20). Indicați cea de a șasea soluție, în ordinea generării acestora.\na. (80,60,45,15) b. (80,60,50,10) c. (80,70,30,20) d. (80,70,40,10)",
                "exercise_number": "3"
            },
            "4": {
                "content": "Un arbore cu 10 noduri, numerotate de la 1 la 10, este reprezentat prin vectorul de „tați”\n(7,5,6,5,7,0,6,3,3,8). Indicați numărul de noduri „frunză” ale acestui arbore.\na. 2 b. 3 c. 5 d. 6",
                "exercise_number": "4"
            },
            "5": {
                "content": "Un graf neorientat cu 5 noduri este reprezentat prin matricea de adiacență alăturată.\nIndicați numărul grafurilor parțiale conexe ale acestuia care sunt diferite de graful dat.\n0 1 0 1 1\n1 0 1 0 0\n0 1 0 1 0\n1 0 1 0 0\n1 0 0 0 0\na. 4 b. 6 c. 8 d. 30\n \nMinisterul Educației și Cercetării\nCentrul Național de Politici și Evaluare în Educație\nProbă scrisă la informatică Varianta 6\nLimbajul C/C++\nFilieră teoretică, profil real, specializare matematică-informatică / matematică-informatică intensiv informatică\nFilieră vocaţională, profil militar, specializare matematică-informatică\nPagina 2 din 2\nSUBIECTUL al II-lea (40 de puncte)",
                "exercise_number": "5"
            }
        }
    },
    "subiectul_2": {
        "subject_number": "II",
        "total_points": "40",
        "subject_title": "SUBIECTUL al II-lea",
        "exercises": {
            "1": {
                "content": "Algoritmul alăturat este reprezentat în pseudocod.\nS-a notat cu a%b restul împărțirii numărului natural a la numărul\nnatural nenul b și cu [c] partea întreagă a numărului real c.\ncitește a (număr natural)\nc←0\n┌repetă\n│ b←a; x←0\n│┌repetă\n││┌dacă b%10=c atunci\n│││ x←1\n││└■\n││ b←[b/10]\n│└până când b=0 sau x=1\n│ scrie x,’ ’\n│ c←c+2\n└până când c>9\na. Scrieți valorile afișate dacă se citește numărul 240107. (6p.)\nb. Scrieți cel mai mic și cel mai mare număr din intervalul [105,106), cu\ncifre distincte, care pot fi citite astfel încât, pentru fiecare dintre acestea,\nîn urma executării algoritmului, toate valorile afișate să fie nenule. (6p.)\nc. Scrieți programul C/C++ corespunzător algoritmului dat. (10p.)\nd. Scrieți în pseudocod un algoritm echivalent cu cel dat, înlocuind\nadecvat a doua structură repetă...până când cu o structură\nrepetitivă de alt tip. (6p.)",
                "exercise_number": "1"
            },
            "2": {
                "content": "Variabila c memorează, pentru un calculator, capacitatea memoriei (interne și externe), măsurată în GB, și o\nliteră, corespunzătoare tipului monitorului acestuia. Știind că expresiile C/C++ de mai jos au ca valori litera\ncorespunzătoare tipul monitorului și două numere naturale din intervalul [1,106], reprezentând capacitatea\nmemoriei interne, respectiv capacitatea memoriei externe a calculatorului, scrieți definiția unei structuri cu\neticheta calculator, care permite memorarea datelor despre un calculator, și declarați corespunzător\nvariabila c.\nc.monitor c.memorie.interna c.memorie.externa (6p.)",
                "exercise_number": "2"
            },
            "3": {
                "content": "Variabilele i și j sunt de tip întreg, iar variabila a memorează un tablou\nbidimensional cu 9 linii și 9 coloane, numerotate de la 0 la 8, având inițial\ntoate elementele egale cu simbolul egal (=).\nScrieți secvența de mai jos, înlocuind punctele de suspensie, astfel încât,\nîn urma executării secvenței obținute, variabila a să memoreze tabloul\nalăturat.\nfor(i=0;i<9;i++)\n for(j=0;j<9;j++)\n .................. (6p.)\n> > > > > > > > >\n> > > > > > > > >\n> > > > > > > > >\n> > > > > > > > >\n> > > > > > > > >\n> > > > < > > > >\n> > > < < < > > >\n> > < < < < < > >\n> < < < < < < < >\nSUBIECTUL al III-lea (30 de puncte)",
                "exercise_number": "3"
            }
        }
    },
    "subiectul_3": {
        "subject_number": "III",
        "total_points": "30",
        "subject_title": "SUBIECTUL al III-lea",
        "exercises": {
            "1": {
                "content": "Subprogramul suma are doi parametri, a și b, prin care primește câte un număr natural din intervalul\n[1,104]. Subprogramul returnează suma divizorilor naturali comuni lui a și b.\nScrieți definiția completă a subprogramului.\nExemplu: dacă a=20 și b=12, atunci subprogramul returnează valoarea 7 (1+2+4=7). (10p.)",
                "exercise_number": "1"
            },
            "2": {
                "content": "Numim rotire spre stânga a unui cuvânt format din cel puțin trei litere operația prin care prima sa literă\nse mută la final, iar toate celelalte litere se mută cu o poziție spre stânga.\nExemplu: în urma rotirii spre stânga a cuvântului ilumina se obține cuvântul luminai.\nUn text are cel mult 100 de caractere, iar cuvintele sale sunt formate din litere mici ale alfabetului\nenglez și sunt separate prin câte un spațiu. Scrieți un program C/C++ care citește de la tastatură un text\nde tipul menționat mai sus și îl transformă în memorie prin rotirea spre stânga a fiecărui cuvânt al său\nformat din cel puțin trei litere, ca în exemplu. Programul afișează pe ecran textul obținut sau mesajul\nnu exista, dacă în text nu există niciun cuvânt de cel puțin trei litere.\nExemplu: pentru textul un palc mic de scolarite ilumina sala\nse afișează pe ecran un alcp icm de colarites luminai alas (10p.)",
                "exercise_number": "2"
            },
            "3": {
                "content": "Un șir finit se numește palindromic dacă parcurgându-l termen cu termen, de la stânga la dreapta sau\nde la dreapta la stânga se obține același șir de valori.\nExemplu: șirul 12, 13, 16, 13, 12 este palindromic.\nFișierul bac.in conține un șir de cel mult 106\n numere naturale din intervalul [1,103], separate prin\ncâte un spațiu. Se cere să se afișeze pe ecran mesajul DA, dacă numerele din șir pot fi rearanjate, astfel\nîncât să formeze un șir palindromic, sau mesajul NU în caz contrar. Proiectați un algoritm eficient din\npunctul de vedere al timpului de executare.\nExemplu: dacă fișierul conține numerele 100 30 100 30 500 30 30\nse afișează pe ecran DA\na. Descrieți în limbaj natural algoritmul proiectat, justificând eficiența acestuia. (2p.)\nb. Scrieți programul C/C++ corespunzător algoritmului proiectat. (8p.)",
                "exercise_number": "3"
            }
        }
    }
}