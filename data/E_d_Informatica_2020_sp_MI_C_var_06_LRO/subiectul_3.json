{
    "subject_number": "III",
    "total_points": "30",
    "subject_title": "SUBIECTUL al III-lea",
    "exercises": {
        "1": {
            "content": "Subprogramul suma are doi parametri, a și b, prin care primește câte un număr natural din intervalul\n[1,104]. Subprogramul returnează suma divizorilor naturali comuni lui a și b.\nScrieți definiția completă a subprogramului.\nExemplu: dacă a=20 și b=12, atunci subprogramul returnează valoarea 7 (1+2+4=7). (10p.)",
            "exercise_number": "1"
        },
        "2": {
            "content": "Numim rotire spre stânga a unui cuvânt format din cel puțin trei litere operația prin care prima sa literă\nse mută la final, iar toate celelalte litere se mută cu o poziție spre stânga.\nExemplu: în urma rotirii spre stânga a cuvântului ilumina se obține cuvântul luminai.\nUn text are cel mult 100 de caractere, iar cuvintele sale sunt formate din litere mici ale alfabetului\nenglez și sunt separate prin câte un spațiu. Scrieți un program C/C++ care citește de la tastatură un text\nde tipul menționat mai sus și îl transformă în memorie prin rotirea spre stânga a fiecărui cuvânt al său\nformat din cel puțin trei litere, ca în exemplu. Programul afișează pe ecran textul obținut sau mesajul\nnu exista, dacă în text nu există niciun cuvânt de cel puțin trei litere.\nExemplu: pentru textul un palc mic de scolarite ilumina sala\nse afișează pe ecran un alcp icm de colarites luminai alas (10p.)",
            "exercise_number": "2"
        },
        "3": {
            "content": "Un șir finit se numește palindromic dacă parcurgându-l termen cu termen, de la stânga la dreapta sau\nde la dreapta la stânga se obține același șir de valori.\nExemplu: șirul 12, 13, 16, 13, 12 este palindromic.\nFișierul bac.in conține un șir de cel mult 106\n numere naturale din intervalul [1,103], separate prin\ncâte un spațiu. Se cere să se afișeze pe ecran mesajul DA, dacă numerele din șir pot fi rearanjate, astfel\nîncât să formeze un șir palindromic, sau mesajul NU în caz contrar. Proiectați un algoritm eficient din\npunctul de vedere al timpului de executare.\nExemplu: dacă fișierul conține numerele 100 30 100 30 500 30 30\nse afișează pe ecran DA\na. Descrieți în limbaj natural algoritmul proiectat, justificând eficiența acestuia. (2p.)\nb. Scrieți programul C/C++ corespunzător algoritmului proiectat. (8p.)",
            "exercise_number": "3"
        }
    }
}