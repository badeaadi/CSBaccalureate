{
    "subiectul_1": {
        "subject_number": "I",
        "total_points": "20",
        "subject_title": "SUBIECTUL I",
        "exercises": {
            "1": {
                "content": "Indicați expresia C/C++ care are cea mai mare valoare, comparativ cu celelalte trei expresii.\na. 20*23/(2*2) b. 20/2*23/2 c. (20*23)/2 d. (20*23)/2*2",
                "exercise_number": "1"
            },
            "2": {
                "content": "Subprogramul f este definit alăturat. Indicați ce se\nafișează în urma apelului de mai jos.\nf(23);\nvoid f (int n)\n{ if(n!=0) f(n/2);\n cout<<n%2; | printf(\"%d\",n%2);\n}\na. 100111 b. 111010 c. 010111 d. 01251123",
                "exercise_number": "2"
            },
            "3": {
                "content": "Variabila k este de tip întreg, iar variabila s permite memorarea unui șir\nde maximum 50 de caractere. Indicați valoarea variabilei k în urma\nexecutării secvenței alăturate.\nstrcpy(s,\"bac2023\");\ns[s[2]-'a']='\\0';\nk=strlen(s);\na. 7 b. 6 c. 2 d. 1",
                "exercise_number": "3"
            },
            "4": {
                "content": "Indicați un vector de „tați” corespunzător unui arbore cu 7 noduri, în care cel puțin unul dintre noduri are\ntrei ascendenți.\na. 0,1,2,1,1,1,2 b. 3,0,2,1,3,2,1 c. 4,3,0,3,4,4,3 d. 5,4,3,0,2,3,4",
                "exercise_number": "4"
            },
            "5": {
                "content": "O companie de colectare a fructelor are 6 depozite, numerotate de la 1 la 6: depozitele 1, 3 și 5 conțin\nmere, depozitele 2 și 4 conțin pere, iar depozitul 6 conține piersici. Compania a construit 4 benzi de\ntransport unidirecțional: de la depozitul 1 la depozitul 5, de la depozitul 5 la depozitul 2, de la depozitul 5\nla depozitul 4 și de la depozitul 6 la depozitul 1. Dacă depozitele reprezintă vârfurile unui graf orientat,\niar benzile de transport reprezintă arcele acestuia, indicați numărul minim de benzi de transport care pot\nfi adăugate, astfel încât graful obținut să aibă trei componente tare conexe, fiecare dintre acestea având\nvârfuri care corespund depozitelor cu același tip de fructe.\na. 4 b. 3 c. 2 d. 1\nSUBIECTUL al II-lea (40 de puncte)",
                "exercise_number": "5"
            }
        }
    },
    "subiectul_2": {
        "subject_number": "II",
        "total_points": "40",
        "subject_title": "SUBIECTUL al II-lea",
        "exercises": {
            "1": {
                "content": "Algoritmul alăturat este reprezentat în pseudocod.\nS-a notat cu a%b restul împărţirii numărului natural a la numărul natural\nnenul b, și cu [c] partea întreagă a numărului real c.\nciteşte x (număr natural)\n p1; m -1\n┌cât timp p≤x execută\n│ c[x/p]%10\n│┌dacă c>m atunci\n││ mc; pp*10\n││altfel\n││ x[x/(p*10)]*p+x%p\n│└■\n└■\n┌dacă m≥0 atunci scrie x\n│ altfel scrie \"nul\"\n└■\na. Scrieţi valoarea afişată dacă se citește numărul 6907512. (6p.)\nb. Scrieţi două valori distincte din intervalul [100,999] care pot fi\ncitite astfel încât, în urma executării algoritmului, pentru fiecare\ndintre acestea, să se afișeze o valoare identică cu cea citită. (6p.)\nc. Scrieţi programul C/C++ corespunzător algoritmului dat. (10p.)\nd. Scrieţi în pseudocod un algoritm, echivalent cu cel dat, înlocuind\nstructura cât timp...execută cu o structură repetitivă cu test\nfinal. (6p.)\nMinisterul Educației\nCentrul Național de Politici și Evaluare în Educație\nProbă scrisă la informatică Varianta 5\nLimbajul C/C++\nFilieră teoretică, profil real, specializare matematică-informatică / matematică-informatică intensiv informatică\nFilieră vocaţională, profil militar, specializare matematică-informatică\nPagina 2 din 2",
                "exercise_number": "1"
            },
            "2": {
                "content": "Utilizând metoda backtracking, se generează toate amestecurile de apă provenită din surse distincte din\nmulțimea {lac, mare, ocean, ploaie, râu}, astfel încât o sursă să fie de apă sărată și una sau două\nsurse să fie de apă dulce. Marea și oceanul sunt surse de apă sărată, iar lacul, ploaia și râul sunt surse\nde apă dulce. Două amestecuri sunt distincte dacă diferă prin cel puțin o sursă a apei. Primele patru\nsoluţii obţinute sunt, în această ordine: (lac, mare), (lac, mare, ploaie), (lac, mare, râu) şi\n(lac, ocean). Scrieți soluția generată imediat înainte și soluția generată imediat după\n(ocean, ploaie). (6p.)",
                "exercise_number": "2"
            },
            "3": {
                "content": "Variabila f memorează, pentru fiecare dintre cele 10 soiuri de lalele care se vând într-o florărie,\ncaracteristicile acestora: denumirea (șir de maximum 20 de caractere) și stocul, exprimat prin numărul\nde fire și prețul unui fir, în lei (numere naturale). Știind că expresiile de mai jos au ca valori denumirea\nprimului soi de lalele, respectiv suma, în lei, necesară pentru a cumpăra toate lalelele din acest soi,\nscrieți în limbajul C/C++ definiția unei structuri cu eticheta lalea, care să permită memorarea\ninformațiilor menționate pentru un soi de lalea, și declarați corespunzător variabila f.\nf[0].denumire f[0].stoc.nrFire*f[0].stoc.pretFir (6p.)\nSUBIECTUL al III-lea (30 de puncte)",
                "exercise_number": "3"
            }
        }
    },
    "subiectul_3": {
        "subject_number": "III",
        "total_points": "30",
        "subject_title": "SUBIECTUL al III-lea",
        "exercises": {
            "1": {
                "content": "Un număr natural nenul, n, se numește număr abundent dacă S(n)/n>S(k)/k, pentru orice număr\nnatural nenul k (k≤n-1), unde s-a notat cu S(i) suma divizorilor pozitivi ai numărului natural nenul i.\nSubprogramul abundent are un singur parametru, n, prin care primește un număr natural (n∈[2,106]).\nSubprogramul returnează valoarea 1, dacă n este un număr abundent, sau valoarea 0, în caz contrar.\nScrieți definiția completă a subprogramului.\nExemplu: pentru n=6, subprogramul returnează valoarea 1 (S(6)/6=2, iar cel mai mare raport obținut\npentru valori strict mai mici decât 6 este S(4)/4=1.75), iar pentru n=7 sau n=8, subprogramul\nreturnează valoarea 0 (S(7)/7=1.14, S(8)/8=1.87). (10p.)",
                "exercise_number": "1"
            },
            "2": {
                "content": "Pentru a identifica punctele în care se concentrează apa în albia unui râu în cazul secetei, se determină\ntalvegul acesteia – linia care unește punctele cele mai adânci ale albiei. În acest scop s-au stabilit ns\nsecțiuni transversale pe cursul apei, numerotate începând de la 1, și în cadrul fiecărei secțiuni s-a măsurat\nadâncimea apei în np puncte, numerotate începând de la 1. Din fiecare secțiune, în ordine, se include în\ntalveg cel mai adânc punct al acesteia, iar dacă în secțiune sunt mai multe puncte aflate la aceeași\nadâncime, maximă, se va lua în considerare doar primul dintre ele, ca în exemplu.\nScrieți un program C/C++ care citește de la tastatură două numere naturale, ns și np (ns∈[1,103],\nnp∈[1,50]), și cele ns∙np elemente ale unui tablou bidimensional, valori naturale din intervalul [0,102].\nFiecare linie a tabloului corespunde câte unei secțiuni, în ordinea numerotării acestora, iar\nvalorile memorate pe linie reprezintă adâncimile celor np puncte stabilite pentru acea\nsecțiune, în ordinea numerotării lor. Programul afișează pe ecran, pentru fiecare secțiune, o\npereche formată din numărul de ordine al secțiunii și numărul de ordine al punctului său care\ns-a inclus în talveg. Numerele din fiecare pereche sunt afișate separate prin câte un\ncaracter : (două puncte), iar fiecare pereche este urmată de un spațiu.\nExemplu: pentru ns=6, np=4 și tabloul alăturat, se afișează pe ecran valorile:\n1:3 2:2 3:2 4:2 5:4 6:3 (10p.)\n2 4 5 3\n2 6 6 3\n1 5 2 5\n1 3 3 3\n3 4 3 5\n0 1 2 1",
                "exercise_number": "2"
            },
            "3": {
                "content": "Un număr natural x este numit prefix al unui număr natural y dacă se obține din acesta prin eliminarea a\ncel puțin unei cifre de la dreapta sa, și este numit sufix al lui y dacă se obține din acesta prin eliminarea\na cel puțin unei cifre de la stânga sa.\nExemplu: 15 este prefix pentru 154 sau 1521, este sufix pentru 3415 sau 5115, dar nu este nici prefix,\nnici sufix pentru 15.\nFișierul bac.txt conține maximum 106 numere naturale din intervalul [10,104), separate prin câte un\nspațiu. Se cere să se afișeze pe ecran numărul valorilor de două cifre care apar de același număr de ori\nca sufix, respectiv ca prefix al numerelor din șirul aflat în fișier. Proiectați un algoritm eficient din punctul\nde vedere al timpului de executare.\nExemplu: dacă fișierul are conținutul\n342 1684 2134 5434 111 98 98 3405 3412 7016 8634 1010 102 310\nse afișează pe ecran: 4 (pentru valorile 10, 11, 16, 34).\na. Descrieți în limbaj natural algoritmul proiectat, justificând eficiența acestuia. (2p.)\nb. Scrieți programul C/C++ corespunzător algoritmului proiectat.",
                "exercise_number": "3"
            }
        }
    }
}